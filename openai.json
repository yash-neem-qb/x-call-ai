{
    "openapi": "3.1.0",
    "info": {
        "title": "Voice Assistant API",
        "description": "API for creating AI-powered voice calls",
        "version": "1.0.0"
    },
    "paths": {
        "/api/v1/auth/register": {
            "post": {
                "tags": [
                    "authentication"
                ],
                "summary": "Register User",
                "description": "Register a new user and create their organization.",
                "operationId": "register_user_api_v1_auth_register_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserRegister"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Token"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/auth/login": {
            "post": {
                "tags": [
                    "authentication"
                ],
                "summary": "Login User",
                "description": "Authenticate user and return access token.",
                "operationId": "login_user_api_v1_auth_login_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserLogin"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LoginResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/auth/me": {
            "get": {
                "tags": [
                    "authentication"
                ],
                "summary": "Get Current User Profile",
                "description": "Get current user's profile information.",
                "operationId": "get_current_user_profile_api_v1_auth_me_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserProfile"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/auth/change-password": {
            "post": {
                "tags": [
                    "authentication"
                ],
                "summary": "Change Password",
                "description": "Change user's password.",
                "operationId": "change_password_api_v1_auth_change_password_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChangePassword"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/auth/logout": {
            "post": {
                "tags": [
                    "authentication"
                ],
                "summary": "Logout User",
                "description": "Logout user (client should discard token).",
                "operationId": "logout_user_api_v1_auth_logout_post",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/auth/refresh": {
            "post": {
                "tags": [
                    "authentication"
                ],
                "summary": "Refresh Token",
                "description": "Refresh access token.",
                "operationId": "refresh_token_api_v1_auth_refresh_post",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Token"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/organizations/{organization_id}": {
            "get": {
                "tags": [
                    "organizations"
                ],
                "summary": "Get Organization",
                "description": "Get organization by ID.",
                "operationId": "get_organization_api_v1_organizations__organization_id__get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "organization_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Organization Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrganizationResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "organizations"
                ],
                "summary": "Update Organization",
                "description": "Update organization.",
                "operationId": "update_organization_api_v1_organizations__organization_id__put",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "organization_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Organization Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrganizationUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrganizationResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/organizations/{organization_id}/phone-numbers": {
            "post": {
                "tags": [
                    "organizations"
                ],
                "summary": "Create Phone Number",
                "description": "Create a new phone number for the current organization and configure Twilio webhooks.",
                "operationId": "create_phone_number_api_v1_organizations__organization_id__phone_numbers_post",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "organization_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Organization Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PhoneNumberCreate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PhoneNumberResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "organizations"
                ],
                "summary": "List Phone Numbers",
                "description": "List all phone numbers for the organization.",
                "operationId": "list_phone_numbers_api_v1_organizations__organization_id__phone_numbers_get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "organization_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Organization Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PhoneNumberResponse"
                                    },
                                    "title": "Response List Phone Numbers Api V1 Organizations  Organization Id  Phone Numbers Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/organizations/{organization_id}/phone-numbers/{phone_number_id}": {
            "get": {
                "tags": [
                    "organizations"
                ],
                "summary": "Get Phone Number",
                "description": "Get a specific phone number.",
                "operationId": "get_phone_number_api_v1_organizations__organization_id__phone_numbers__phone_number_id__get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "organization_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Organization Id"
                        }
                    },
                    {
                        "name": "phone_number_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Phone Number Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PhoneNumberResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "organizations"
                ],
                "summary": "Update Phone Number",
                "description": "Update a phone number.",
                "operationId": "update_phone_number_api_v1_organizations__organization_id__phone_numbers__phone_number_id__put",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "organization_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Organization Id"
                        }
                    },
                    {
                        "name": "phone_number_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Phone Number Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PhoneNumberUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PhoneNumberResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "organizations"
                ],
                "summary": "Delete Phone Number",
                "description": "Delete a phone number.",
                "operationId": "delete_phone_number_api_v1_organizations__organization_id__phone_numbers__phone_number_id__delete",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "organization_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Organization Id"
                        }
                    },
                    {
                        "name": "phone_number_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Phone Number Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/organizations/{organization_id}/calls": {
            "get": {
                "tags": [
                    "organizations"
                ],
                "summary": "List Calls",
                "description": "List all calls for the organization with pagination and filters.",
                "operationId": "list_calls_api_v1_organizations__organization_id__calls_get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "organization_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Organization Id"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "description": "Page number",
                            "default": 1,
                            "title": "Page"
                        },
                        "description": "Page number"
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1,
                            "description": "Items per page",
                            "default": 10,
                            "title": "Per Page"
                        },
                        "description": "Items per page"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Filter by call status",
                            "title": "Status"
                        },
                        "description": "Filter by call status"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Filter by call direction",
                            "title": "Direction"
                        },
                        "description": "Filter by call direction"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallListResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/": {
            "get": {
                "tags": [
                    "calls"
                ],
                "summary": "Index Page",
                "description": "Root endpoint providing API information.",
                "operationId": "index_page_api_v1__get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/create-call": {
            "post": {
                "tags": [
                    "calls"
                ],
                "summary": "Create Call",
                "description": "Create a new AI-powered voice call to the specified phone number.\n\nThis endpoint initiates a call using Twilio and connects it to the unified pipeline.\n\nArgs:\n    request: The call creation request containing the phone number and assistant ID\n    \nReturns:\n    CreateCallResponse: The call creation response with call details",
                "operationId": "create_call_api_v1_create_call_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateCallRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateCallResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/call-status": {
            "post": {
                "tags": [
                    "calls"
                ],
                "summary": "Call Status Webhook",
                "description": "Handle Twilio call status webhook.\n\nThis endpoint receives status updates from Twilio about call lifecycle events.\n\nArgs:\n    CallSid: The unique identifier for this call\n    CallStatus: The current status of the call\n    Other Twilio parameters: Additional information about the call\n\nReturns:\n    Empty response with 200 status code",
                "operationId": "call_status_webhook_api_v1_call_status_post",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Body_call_status_webhook_api_v1_call_status_post"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/organizations/{organization_id}/assistants": {
            "post": {
                "tags": [
                    "assistants"
                ],
                "summary": "Create Assistant",
                "description": "Create a new assistant for the organization.\n\nArgs:\n    organization_id: Organization ID\n    assistant: Assistant data\n    org_data: Organization and membership data\n    db: Database session\n    \nReturns:\n    Created assistant",
                "operationId": "create_assistant_api_v1_organizations__organization_id__assistants_post",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "organization_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Organization Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AssistantCreate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AssistantResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "assistants"
                ],
                "summary": "Get Assistants",
                "description": "Get all assistants for the organization with pagination.\n\nArgs:\n    organization_id: Organization ID\n    skip: Number of records to skip\n    limit: Maximum number of records to return\n    org_data: Organization and membership data\n    db: Database session\n    \nReturns:\n    List of assistants",
                "operationId": "get_assistants_api_v1_organizations__organization_id__assistants_get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "organization_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Organization Id"
                        }
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 0,
                            "description": "Number of records to skip",
                            "default": 0,
                            "title": "Skip"
                        },
                        "description": "Number of records to skip"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1,
                            "description": "Maximum number of records to return",
                            "default": 100,
                            "title": "Limit"
                        },
                        "description": "Maximum number of records to return"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AssistantList"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/organizations/{organization_id}/assistants/{assistant_id}": {
            "get": {
                "tags": [
                    "assistants"
                ],
                "summary": "Get Assistant",
                "description": "Get assistant by ID.\n\nArgs:\n    organization_id: Organization ID\n    assistant_id: Assistant ID\n    org_data: Organization and membership data\n    db: Database session\n    \nReturns:\n    Assistant",
                "operationId": "get_assistant_api_v1_organizations__organization_id__assistants__assistant_id__get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "organization_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Organization Id"
                        }
                    },
                    {
                        "name": "assistant_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "Assistant ID",
                            "title": "Assistant Id"
                        },
                        "description": "Assistant ID"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AssistantResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "assistants"
                ],
                "summary": "Update Assistant",
                "description": "Update assistant.\n\nArgs:\n    organization_id: Organization ID\n    assistant: Assistant data to update\n    assistant_id: Assistant ID\n    org_data: Organization and membership data\n    db: Database session\n    \nReturns:\n    Updated assistant",
                "operationId": "update_assistant_api_v1_organizations__organization_id__assistants__assistant_id__put",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "organization_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Organization Id"
                        }
                    },
                    {
                        "name": "assistant_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "Assistant ID",
                            "title": "Assistant Id"
                        },
                        "description": "Assistant ID"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AssistantUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AssistantResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "assistants"
                ],
                "summary": "Delete Assistant",
                "description": "Delete assistant.\n\nArgs:\n    organization_id: Organization ID\n    assistant_id: Assistant ID\n    org_data: Organization and membership data\n    db: Database session\n    \nReturns:\n    Success message",
                "operationId": "delete_assistant_api_v1_organizations__organization_id__assistants__assistant_id__delete",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "organization_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Organization Id"
                        }
                    },
                    {
                        "name": "assistant_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "Assistant ID",
                            "title": "Assistant Id"
                        },
                        "description": "Assistant ID"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "title": "Response Delete Assistant Api V1 Organizations  Organization Id  Assistants  Assistant Id  Delete"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/inbound/webhook": {
            "post": {
                "tags": [
                    "inbound"
                ],
                "summary": "Handle Inbound Call",
                "description": "Handle incoming call webhook from Twilio.\n\nThis endpoint receives the webhook when someone calls the configured phone number.",
                "operationId": "handle_inbound_call_api_v1_inbound_webhook_post",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/inbound/status": {
            "post": {
                "tags": [
                    "inbound"
                ],
                "summary": "Handle Call Status",
                "description": "Handle call status webhook from Twilio.\n\nThis endpoint receives status updates about the call (ringing, answered, completed, etc.).",
                "operationId": "handle_call_status_api_v1_inbound_status_post",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/organizations/{organization_id}/knowledge-base": {
            "post": {
                "tags": [
                    "knowledge-base"
                ],
                "summary": "Create Knowledge Document",
                "description": "Create a new knowledge base document.\n\nArgs:\n    organization_id: Organization ID\n    document: Document data\n    org_data: Organization and membership data\n    db: Database session\n    \nReturns:\n    Created knowledge base document",
                "operationId": "create_knowledge_document_api_v1_organizations__organization_id__knowledge_base_post",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "organization_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Organization Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/KnowledgeBaseCreate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/KnowledgeBaseResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "knowledge-base"
                ],
                "summary": "List Knowledge Documents",
                "description": "List knowledge base documents.\n\nArgs:\n    organization_id: Organization ID\n    assistant_id: Optional assistant ID filter\n    skip: Number of records to skip\n    limit: Maximum number of records\n    org_data: Organization and membership data\n    db: Database session\n    \nReturns:\n    List of knowledge base documents",
                "operationId": "list_knowledge_documents_api_v1_organizations__organization_id__knowledge_base_get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "organization_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Organization Id"
                        }
                    },
                    {
                        "name": "assistant_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "uuid"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Filter by assistant ID",
                            "title": "Assistant Id"
                        },
                        "description": "Filter by assistant ID"
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 0,
                            "description": "Number of records to skip",
                            "default": 0,
                            "title": "Skip"
                        },
                        "description": "Number of records to skip"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1,
                            "description": "Maximum number of records",
                            "default": 100,
                            "title": "Limit"
                        },
                        "description": "Maximum number of records"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/KnowledgeBaseListResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/organizations/{organization_id}/knowledge-base/{document_id}": {
            "get": {
                "tags": [
                    "knowledge-base"
                ],
                "summary": "Get Knowledge Document",
                "description": "Get a knowledge base document by ID.\n\nArgs:\n    organization_id: Organization ID\n    document_id: Document ID\n    org_data: Organization and membership data\n    db: Database session\n    \nReturns:\n    Knowledge base document",
                "operationId": "get_knowledge_document_api_v1_organizations__organization_id__knowledge_base__document_id__get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "organization_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Organization Id"
                        }
                    },
                    {
                        "name": "document_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Document Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/KnowledgeBaseResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "knowledge-base"
                ],
                "summary": "Update Knowledge Document",
                "description": "Update a knowledge base document.\n\nArgs:\n    organization_id: Organization ID\n    document_id: Document ID\n    document_update: Update data\n    org_data: Organization and membership data\n    db: Database session\n    \nReturns:\n    Updated knowledge base document",
                "operationId": "update_knowledge_document_api_v1_organizations__organization_id__knowledge_base__document_id__put",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "organization_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Organization Id"
                        }
                    },
                    {
                        "name": "document_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Document Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/KnowledgeBaseUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/KnowledgeBaseResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "knowledge-base"
                ],
                "summary": "Delete Knowledge Document",
                "description": "Delete a knowledge base document.\n\nArgs:\n    organization_id: Organization ID\n    document_id: Document ID\n    org_data: Organization and membership data\n    db: Database session\n    \nReturns:\n    Success message",
                "operationId": "delete_knowledge_document_api_v1_organizations__organization_id__knowledge_base__document_id__delete",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "organization_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Organization Id"
                        }
                    },
                    {
                        "name": "document_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Document Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/organizations/{organization_id}/knowledge-base/search": {
            "post": {
                "tags": [
                    "knowledge-base"
                ],
                "summary": "Search Knowledge Base",
                "description": "Search knowledge base documents using semantic search.\n\nArgs:\n    organization_id: Organization ID\n    search_request: Search request data\n    org_data: Organization and membership data\n    \nReturns:\n    Search results",
                "operationId": "search_knowledge_base_api_v1_organizations__organization_id__knowledge_base_search_post",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "organization_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Organization Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/KnowledgeBaseSearchRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/KnowledgeBaseSearchResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/organizations/{organization_id}/knowledge-base/upload": {
            "post": {
                "tags": [
                    "knowledge-base"
                ],
                "summary": "Upload Knowledge Document",
                "description": "Upload a knowledge base document with chunking.\n\nArgs:\n    organization_id: Organization ID\n    upload_request: Upload request data\n    org_data: Organization and membership data\n    db: Database session\n    \nReturns:\n    Created knowledge base document",
                "operationId": "upload_knowledge_document_api_v1_organizations__organization_id__knowledge_base_upload_post",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "organization_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Organization Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/KnowledgeBaseUploadRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/KnowledgeBaseResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/organizations/{organization_id}/knowledge-base/bulk-upload": {
            "post": {
                "tags": [
                    "knowledge-base"
                ],
                "summary": "Bulk Upload Knowledge Documents",
                "description": "Bulk upload multiple knowledge base documents.\n\nArgs:\n    organization_id: Organization ID\n    bulk_request: Bulk upload request data\n    org_data: Organization and membership data\n    db: Database session\n    \nReturns:\n    List of created knowledge base documents",
                "operationId": "bulk_upload_knowledge_documents_api_v1_organizations__organization_id__knowledge_base_bulk_upload_post",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "organization_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Organization Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/KnowledgeBaseBulkUploadRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/KnowledgeBaseResponse"
                                    },
                                    "title": "Response Bulk Upload Knowledge Documents Api V1 Organizations  Organization Id  Knowledge Base Bulk Upload Post"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/organizations/{organization_id}/knowledge-base/stats": {
            "get": {
                "tags": [
                    "knowledge-base"
                ],
                "summary": "Get Knowledge Base Stats",
                "description": "Get knowledge base statistics.\n\nArgs:\n    organization_id: Organization ID\n    org_data: Organization and membership data\n    db: Database session\n    \nReturns:\n    Knowledge base statistics",
                "operationId": "get_knowledge_base_stats_api_v1_organizations__organization_id__knowledge_base_stats_get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "organization_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Organization Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/KnowledgeBaseStatsResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/organizations/{organization_id}/knowledge-base/supported-formats": {
            "get": {
                "tags": [
                    "knowledge-base"
                ],
                "summary": "Get Supported Formats",
                "description": "Get supported file formats for upload.\n\nArgs:\n    organization_id: Organization ID\n    org_data: Organization and membership data\n    \nReturns:\n    Supported formats information",
                "operationId": "get_supported_formats_api_v1_organizations__organization_id__knowledge_base_supported_formats_get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "organization_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Organization Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SupportedFormatsResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/organizations/{organization_id}/knowledge-base/upload-file": {
            "post": {
                "tags": [
                    "knowledge-base"
                ],
                "summary": "Upload File",
                "description": "Upload a single file to the knowledge base.\n\nArgs:\n    organization_id: Organization ID\n    file: Uploaded file\n    assistant_id: Optional assistant ID\n    chunk_size: Chunk size for processing\n    chunk_overlap: Chunk overlap\n    tags: Optional tags as JSON string\n    metadata: Optional metadata as JSON string\n    org_data: Organization and membership data\n    db: Database session\n    \nReturns:\n    Upload result",
                "operationId": "upload_file_api_v1_organizations__organization_id__knowledge_base_upload_file_post",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "organization_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Organization Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Body_upload_file_api_v1_organizations__organization_id__knowledge_base_upload_file_post"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FileUploadResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/organizations/{organization_id}/knowledge-base/upload-files": {
            "post": {
                "tags": [
                    "knowledge-base"
                ],
                "summary": "Upload Files",
                "description": "Upload multiple files to the knowledge base.\n\nArgs:\n    organization_id: Organization ID\n    files: List of uploaded files\n    assistant_id: Optional assistant ID\n    chunk_size: Chunk size for processing\n    chunk_overlap: Chunk overlap\n    tags: Optional tags as JSON string\n    metadata: Optional metadata as JSON string\n    org_data: Organization and membership data\n    db: Database session\n    \nReturns:\n    Bulk upload result",
                "operationId": "upload_files_api_v1_organizations__organization_id__knowledge_base_upload_files_post",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "organization_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Organization Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Body_upload_files_api_v1_organizations__organization_id__knowledge_base_upload_files_post"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BulkFileUploadResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/organizations/{organization_id}/knowledge-base/preview-file": {
            "post": {
                "tags": [
                    "knowledge-base"
                ],
                "summary": "Preview File",
                "description": "Preview a file without uploading it to the knowledge base.\n\nArgs:\n    organization_id: Organization ID\n    file: File to preview\n    org_data: Organization and membership data\n    \nReturns:\n    File preview information",
                "operationId": "preview_file_api_v1_organizations__organization_id__knowledge_base_preview_file_post",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "organization_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Organization Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Body_preview_file_api_v1_organizations__organization_id__knowledge_base_preview_file_post"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DocumentPreviewResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/organizations/{organization_id}/dashboard/overview": {
            "get": {
                "tags": [
                    "dashboard"
                ],
                "summary": "Get Dashboard Overview",
                "description": "Get comprehensive dashboard overview metrics.\n\nArgs:\n    organization_id: Organization ID\n    date_from: Optional start date filter\n    date_to: Optional end date filter\n    org_data: Organization and membership data\n    db: Database session\n    \nReturns:\n    Dashboard overview metrics",
                "operationId": "get_dashboard_overview_api_v1_organizations__organization_id__dashboard_overview_get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "organization_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Organization Id"
                        }
                    },
                    {
                        "name": "date_from",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Start date (YYYY-MM-DD)",
                            "title": "Date From"
                        },
                        "description": "Start date (YYYY-MM-DD)"
                    },
                    {
                        "name": "date_to",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "End date (YYYY-MM-DD)",
                            "title": "Date To"
                        },
                        "description": "End date (YYYY-MM-DD)"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/organizations/{organization_id}/dashboard/trends": {
            "get": {
                "tags": [
                    "dashboard"
                ],
                "summary": "Get Call Trends",
                "description": "Get call trends over time.\n\nArgs:\n    organization_id: Organization ID\n    period: Aggregation period (day, week, month)\n    days: Number of days to look back\n    org_data: Organization and membership data\n    db: Database session\n    \nReturns:\n    Call trends data",
                "operationId": "get_call_trends_api_v1_organizations__organization_id__dashboard_trends_get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "organization_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Organization Id"
                        }
                    },
                    {
                        "name": "period",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "description": "Aggregation period (day, week, month)",
                            "default": "day",
                            "title": "Period"
                        },
                        "description": "Aggregation period (day, week, month)"
                    },
                    {
                        "name": "days",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 365,
                            "minimum": 1,
                            "description": "Number of days to look back",
                            "default": 30,
                            "title": "Days"
                        },
                        "description": "Number of days to look back"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/organizations/{organization_id}/dashboard/phone-numbers": {
            "get": {
                "tags": [
                    "dashboard"
                ],
                "summary": "Get Phone Number Analytics",
                "description": "Get detailed phone number analytics.\n\nArgs:\n    organization_id: Organization ID\n    phone_number_id: Optional specific phone number ID\n    org_data: Organization and membership data\n    db: Database session\n    \nReturns:\n    Phone number analytics",
                "operationId": "get_phone_number_analytics_api_v1_organizations__organization_id__dashboard_phone_numbers_get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "organization_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Organization Id"
                        }
                    },
                    {
                        "name": "phone_number_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "uuid"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Specific phone number ID",
                            "title": "Phone Number Id"
                        },
                        "description": "Specific phone number ID"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/organizations/{organization_id}/dashboard/assistants": {
            "get": {
                "tags": [
                    "dashboard"
                ],
                "summary": "Get Assistant Analytics",
                "description": "Get detailed assistant analytics.\n\nArgs:\n    organization_id: Organization ID\n    assistant_id: Optional specific assistant ID\n    org_data: Organization and membership data\n    db: Database session\n    \nReturns:\n    Assistant analytics",
                "operationId": "get_assistant_analytics_api_v1_organizations__organization_id__dashboard_assistants_get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "organization_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Organization Id"
                        }
                    },
                    {
                        "name": "assistant_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "uuid"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Specific assistant ID",
                            "title": "Assistant Id"
                        },
                        "description": "Specific assistant ID"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/organizations/{organization_id}/dashboard/hourly-distribution": {
            "get": {
                "tags": [
                    "dashboard"
                ],
                "summary": "Get Hourly Distribution",
                "description": "Get call distribution by hour of day.\n\nArgs:\n    organization_id: Organization ID\n    days: Number of days to analyze\n    org_data: Organization and membership data\n    db: Database session\n    \nReturns:\n    Hourly distribution data",
                "operationId": "get_hourly_distribution_api_v1_organizations__organization_id__dashboard_hourly_distribution_get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "organization_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Organization Id"
                        }
                    },
                    {
                        "name": "days",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 30,
                            "minimum": 1,
                            "description": "Number of days to analyze",
                            "default": 7,
                            "title": "Days"
                        },
                        "description": "Number of days to analyze"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/organizations/{organization_id}/dashboard/summary": {
            "get": {
                "tags": [
                    "dashboard"
                ],
                "summary": "Get Dashboard Summary",
                "description": "Get a quick dashboard summary with key metrics.\n\nArgs:\n    organization_id: Organization ID\n    org_data: Organization and membership data\n    db: Database session\n    \nReturns:\n    Dashboard summary",
                "operationId": "get_dashboard_summary_api_v1_organizations__organization_id__dashboard_summary_get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "organization_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Organization Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "AssistantCreate": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "Assistant name"
                    },
                    "team_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Team Id",
                        "description": "Team ID (optional)"
                    },
                    "voice": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/VoiceConfig"
                            }
                        ],
                        "description": "Voice configuration"
                    },
                    "model": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ModelConfig"
                            }
                        ],
                        "description": "Model configuration"
                    },
                    "firstMessage": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Firstmessage",
                        "description": "First message to say"
                    },
                    "voicemailMessage": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Voicemailmessage",
                        "description": "Voicemail message"
                    },
                    "endCallMessage": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Endcallmessage",
                        "description": "End call message"
                    },
                    "transcriber": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TranscriberConfig"
                            }
                        ],
                        "description": "Transcriber configuration"
                    },
                    "isServerUrlSecretSet": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Isserverurlsecretset",
                        "description": "Whether server URL secret is set",
                        "default": false
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "voice",
                    "model",
                    "transcriber"
                ],
                "title": "AssistantCreate",
                "description": "Schema for creating a new assistant."
            },
            "AssistantList": {
                "properties": {
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/AssistantResponse"
                        },
                        "type": "array",
                        "title": "Items",
                        "description": "List of assistants"
                    },
                    "total": {
                        "type": "integer",
                        "title": "Total",
                        "description": "Total number of assistants"
                    },
                    "page": {
                        "type": "integer",
                        "title": "Page",
                        "description": "Current page number",
                        "default": 1
                    },
                    "pageSize": {
                        "type": "integer",
                        "title": "Pagesize",
                        "description": "Page size"
                    },
                    "totalPages": {
                        "type": "integer",
                        "title": "Totalpages",
                        "description": "Total number of pages"
                    }
                },
                "type": "object",
                "required": [
                    "items",
                    "total",
                    "pageSize",
                    "totalPages"
                ],
                "title": "AssistantList",
                "description": "Schema for list of assistants."
            },
            "AssistantResponse": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id",
                        "description": "Assistant ID"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "Assistant name"
                    },
                    "voice": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/VoiceConfig"
                            }
                        ],
                        "description": "Voice configuration"
                    },
                    "model": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ModelConfig"
                            }
                        ],
                        "description": "Model configuration"
                    },
                    "firstMessage": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Firstmessage",
                        "description": "First message to say"
                    },
                    "voicemailMessage": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Voicemailmessage",
                        "description": "Voicemail message"
                    },
                    "endCallMessage": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Endcallmessage",
                        "description": "End call message"
                    },
                    "transcriber": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TranscriberConfig"
                            }
                        ],
                        "description": "Transcriber configuration"
                    },
                    "isServerUrlSecretSet": {
                        "type": "boolean",
                        "title": "Isserverurlsecretset",
                        "description": "Whether server URL secret is set"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Createdat",
                        "description": "Creation timestamp"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updatedat",
                        "description": "Last update timestamp"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "voice",
                    "model",
                    "transcriber",
                    "isServerUrlSecretSet",
                    "createdAt",
                    "updatedAt"
                ],
                "title": "AssistantResponse",
                "description": "Schema for assistant response."
            },
            "AssistantUpdate": {
                "properties": {
                    "name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Name",
                        "description": "Assistant name"
                    },
                    "voice": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/VoiceConfig"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Voice configuration"
                    },
                    "model": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/ModelConfig"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Model configuration"
                    },
                    "firstMessage": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Firstmessage",
                        "description": "First message to say"
                    },
                    "voicemailMessage": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Voicemailmessage",
                        "description": "Voicemail message"
                    },
                    "endCallMessage": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Endcallmessage",
                        "description": "End call message"
                    },
                    "transcriber": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/TranscriberConfig"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Transcriber configuration"
                    },
                    "isServerUrlSecretSet": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Isserverurlsecretset",
                        "description": "Whether server URL secret is set"
                    }
                },
                "type": "object",
                "title": "AssistantUpdate",
                "description": "Schema for updating an assistant."
            },
            "Body_call_status_webhook_api_v1_call_status_post": {
                "properties": {
                    "CallSid": {
                        "type": "string",
                        "title": "Callsid"
                    },
                    "CallStatus": {
                        "type": "string",
                        "title": "Callstatus"
                    },
                    "AccountSid": {
                        "type": "string",
                        "title": "Accountsid"
                    },
                    "From": {
                        "type": "string",
                        "title": "From"
                    },
                    "To": {
                        "type": "string",
                        "title": "To"
                    },
                    "CallDuration": {
                        "type": "string",
                        "title": "Callduration"
                    },
                    "Direction": {
                        "type": "string",
                        "title": "Direction"
                    }
                },
                "type": "object",
                "required": [
                    "CallSid",
                    "CallStatus"
                ],
                "title": "Body_call_status_webhook_api_v1_call_status_post"
            },
            "Body_preview_file_api_v1_organizations__organization_id__knowledge_base_preview_file_post": {
                "properties": {
                    "file": {
                        "type": "string",
                        "format": "binary",
                        "title": "File"
                    }
                },
                "type": "object",
                "required": [
                    "file"
                ],
                "title": "Body_preview_file_api_v1_organizations__organization_id__knowledge_base_preview_file_post"
            },
            "Body_upload_file_api_v1_organizations__organization_id__knowledge_base_upload_file_post": {
                "properties": {
                    "file": {
                        "type": "string",
                        "format": "binary",
                        "title": "File"
                    },
                    "assistant_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Assistant Id"
                    },
                    "chunk_size": {
                        "type": "integer",
                        "title": "Chunk Size",
                        "default": 1000
                    },
                    "chunk_overlap": {
                        "type": "integer",
                        "title": "Chunk Overlap",
                        "default": 200
                    },
                    "tags": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Tags"
                    },
                    "metadata": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Metadata"
                    }
                },
                "type": "object",
                "required": [
                    "file"
                ],
                "title": "Body_upload_file_api_v1_organizations__organization_id__knowledge_base_upload_file_post"
            },
            "Body_upload_files_api_v1_organizations__organization_id__knowledge_base_upload_files_post": {
                "properties": {
                    "files": {
                        "items": {
                            "type": "string",
                            "format": "binary"
                        },
                        "type": "array",
                        "title": "Files"
                    },
                    "assistant_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Assistant Id"
                    },
                    "chunk_size": {
                        "type": "integer",
                        "title": "Chunk Size",
                        "default": 1000
                    },
                    "chunk_overlap": {
                        "type": "integer",
                        "title": "Chunk Overlap",
                        "default": 200
                    },
                    "tags": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Tags"
                    },
                    "metadata": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Metadata"
                    }
                },
                "type": "object",
                "required": [
                    "files"
                ],
                "title": "Body_upload_files_api_v1_organizations__organization_id__knowledge_base_upload_files_post"
            },
            "BulkFileUploadResponse": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "title": "Success"
                    },
                    "total_files": {
                        "type": "integer",
                        "title": "Total Files"
                    },
                    "successful_uploads": {
                        "type": "integer",
                        "title": "Successful Uploads"
                    },
                    "failed_uploads": {
                        "type": "integer",
                        "title": "Failed Uploads"
                    },
                    "results": {
                        "items": {
                            "type": "object"
                        },
                        "type": "array",
                        "title": "Results"
                    },
                    "message": {
                        "type": "string",
                        "title": "Message"
                    }
                },
                "type": "object",
                "required": [
                    "success",
                    "total_files",
                    "successful_uploads",
                    "failed_uploads",
                    "results",
                    "message"
                ],
                "title": "BulkFileUploadResponse",
                "description": "Schema for bulk file upload response."
            },
            "CallListResponse": {
                "properties": {
                    "calls": {
                        "items": {
                            "$ref": "#/components/schemas/CallResponse"
                        },
                        "type": "array",
                        "title": "Calls"
                    },
                    "total": {
                        "type": "integer",
                        "title": "Total"
                    },
                    "page": {
                        "type": "integer",
                        "title": "Page"
                    },
                    "per_page": {
                        "type": "integer",
                        "title": "Per Page"
                    },
                    "total_pages": {
                        "type": "integer",
                        "title": "Total Pages"
                    }
                },
                "type": "object",
                "required": [
                    "calls",
                    "total",
                    "page",
                    "per_page",
                    "total_pages"
                ],
                "title": "CallListResponse",
                "description": "Schema for call list response."
            },
            "CallResponse": {
                "properties": {
                    "from_number": {
                        "anyOf": [
                            {
                                "type": "string",
                                "pattern": "^\\+[1-9]\\d{1,14}$"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "From Number",
                        "description": "Caller's phone number"
                    },
                    "to_number": {
                        "anyOf": [
                            {
                                "type": "string",
                                "pattern": "^\\+[1-9]\\d{1,14}$"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "To Number",
                        "description": "Called phone number"
                    },
                    "direction": {
                        "type": "string",
                        "pattern": "^(inbound|outbound)$",
                        "title": "Direction",
                        "description": "Call direction"
                    },
                    "call_data": {
                        "anyOf": [
                            {
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Call Data",
                        "description": "Call data and analytics"
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id"
                    },
                    "twilio_call_sid": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Twilio Call Sid"
                    },
                    "twilio_account_sid": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Twilio Account Sid"
                    },
                    "organization_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Organization Id"
                    },
                    "phone_number_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Phone Number Id"
                    },
                    "assistant_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Assistant Id"
                    },
                    "status": {
                        "type": "string",
                        "title": "Status"
                    },
                    "duration_seconds": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Duration Seconds"
                    },
                    "recording_url": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Recording Url"
                    },
                    "transcription": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Transcription"
                    },
                    "created_by": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Created By"
                    },
                    "started_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Started At"
                    },
                    "ended_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Ended At"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated At"
                    }
                },
                "type": "object",
                "required": [
                    "direction",
                    "id",
                    "twilio_call_sid",
                    "twilio_account_sid",
                    "organization_id",
                    "phone_number_id",
                    "assistant_id",
                    "status",
                    "duration_seconds",
                    "recording_url",
                    "transcription",
                    "created_by",
                    "started_at",
                    "ended_at",
                    "created_at",
                    "updated_at"
                ],
                "title": "CallResponse",
                "description": "Schema for call response."
            },
            "ChangePassword": {
                "properties": {
                    "current_password": {
                        "type": "string",
                        "title": "Current Password",
                        "description": "Current password"
                    },
                    "new_password": {
                        "type": "string",
                        "minLength": 6,
                        "title": "New Password",
                        "description": "New password"
                    }
                },
                "type": "object",
                "required": [
                    "current_password",
                    "new_password"
                ],
                "title": "ChangePassword",
                "description": "Schema for changing password."
            },
            "CreateCallRequest": {
                "properties": {
                    "phone_number": {
                        "type": "string",
                        "title": "Phone Number",
                        "description": "Phone number to call in E.164 format (e.g., +1234567890)"
                    },
                    "assistant_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Assistant Id",
                        "description": "ID of the assistant to use for this call"
                    }
                },
                "type": "object",
                "required": [
                    "phone_number",
                    "assistant_id"
                ],
                "title": "CreateCallRequest",
                "description": "Request model for creating a call."
            },
            "CreateCallResponse": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "title": "Success",
                        "description": "Whether the call was created successfully"
                    },
                    "call_sid": {
                        "type": "string",
                        "title": "Call Sid",
                        "description": "The Twilio Call SID"
                    },
                    "message": {
                        "type": "string",
                        "title": "Message",
                        "description": "A message describing the result"
                    },
                    "phone_number": {
                        "type": "string",
                        "title": "Phone Number",
                        "description": "The phone number that was called"
                    },
                    "assistant_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Assistant Id",
                        "description": "ID of the assistant used for this call"
                    }
                },
                "type": "object",
                "required": [
                    "success",
                    "call_sid",
                    "message",
                    "phone_number",
                    "assistant_id"
                ],
                "title": "CreateCallResponse",
                "description": "Response model for call creation."
            },
            "DocumentPreviewResponse": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "title": "Success"
                    },
                    "filename": {
                        "type": "string",
                        "title": "Filename"
                    },
                    "file_type": {
                        "type": "string",
                        "title": "File Type"
                    },
                    "file_size": {
                        "type": "integer",
                        "title": "File Size"
                    },
                    "title": {
                        "type": "string",
                        "title": "Title"
                    },
                    "content_preview": {
                        "type": "string",
                        "title": "Content Preview"
                    },
                    "metadata": {
                        "type": "object",
                        "title": "Metadata"
                    },
                    "structure": {
                        "type": "object",
                        "title": "Structure"
                    },
                    "estimated_chunks": {
                        "type": "integer",
                        "title": "Estimated Chunks"
                    }
                },
                "type": "object",
                "required": [
                    "success",
                    "filename",
                    "file_type",
                    "file_size",
                    "title",
                    "content_preview",
                    "metadata",
                    "structure",
                    "estimated_chunks"
                ],
                "title": "DocumentPreviewResponse",
                "description": "Schema for document preview response."
            },
            "FileUploadResponse": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "title": "Success"
                    },
                    "knowledge_document_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Knowledge Document Id"
                    },
                    "filename": {
                        "type": "string",
                        "title": "Filename"
                    },
                    "file_type": {
                        "type": "string",
                        "title": "File Type"
                    },
                    "file_size": {
                        "type": "integer",
                        "title": "File Size"
                    },
                    "title": {
                        "type": "string",
                        "title": "Title"
                    },
                    "content_preview": {
                        "type": "string",
                        "title": "Content Preview"
                    },
                    "estimated_chunks": {
                        "type": "integer",
                        "title": "Estimated Chunks"
                    },
                    "message": {
                        "type": "string",
                        "title": "Message"
                    }
                },
                "type": "object",
                "required": [
                    "success",
                    "filename",
                    "file_type",
                    "file_size",
                    "title",
                    "content_preview",
                    "estimated_chunks",
                    "message"
                ],
                "title": "FileUploadResponse",
                "description": "Schema for file upload response."
            },
            "HTTPValidationError": {
                "properties": {
                    "detail": {
                        "items": {
                            "$ref": "#/components/schemas/ValidationError"
                        },
                        "type": "array",
                        "title": "Detail"
                    }
                },
                "type": "object",
                "title": "HTTPValidationError"
            },
            "KnowledgeBaseBulkUploadRequest": {
                "properties": {
                    "documents": {
                        "items": {
                            "$ref": "#/components/schemas/KnowledgeBaseUploadRequest"
                        },
                        "type": "array",
                        "title": "Documents"
                    },
                    "chunk_size": {
                        "anyOf": [
                            {
                                "type": "integer",
                                "maximum": 2000.0,
                                "minimum": 100.0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Chunk Size",
                        "description": "Chunk size for processing",
                        "default": 1000
                    },
                    "chunk_overlap": {
                        "anyOf": [
                            {
                                "type": "integer",
                                "maximum": 500.0,
                                "minimum": 0.0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Chunk Overlap",
                        "description": "Chunk overlap",
                        "default": 200
                    }
                },
                "type": "object",
                "required": [
                    "documents"
                ],
                "title": "KnowledgeBaseBulkUploadRequest",
                "description": "Schema for bulk knowledge base upload request."
            },
            "KnowledgeBaseCreate": {
                "properties": {
                    "title": {
                        "type": "string",
                        "maxLength": 500,
                        "title": "Title",
                        "description": "Document title"
                    },
                    "content": {
                        "type": "string",
                        "title": "Content",
                        "description": "Document content"
                    },
                    "source": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 255
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Source",
                        "description": "Source URL or file path"
                    },
                    "metadata": {
                        "anyOf": [
                            {
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Metadata",
                        "description": "Additional metadata"
                    },
                    "tags": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Tags",
                        "description": "Document tags"
                    },
                    "assistant_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Assistant Id",
                        "description": "Assistant ID (optional)"
                    }
                },
                "type": "object",
                "required": [
                    "title",
                    "content"
                ],
                "title": "KnowledgeBaseCreate",
                "description": "Schema for creating a new knowledge base document."
            },
            "KnowledgeBaseListResponse": {
                "properties": {
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/KnowledgeBaseResponse"
                        },
                        "type": "array",
                        "title": "Items"
                    },
                    "total": {
                        "type": "integer",
                        "title": "Total"
                    },
                    "page": {
                        "type": "integer",
                        "title": "Page"
                    },
                    "page_size": {
                        "type": "integer",
                        "title": "Page Size"
                    },
                    "total_pages": {
                        "type": "integer",
                        "title": "Total Pages"
                    }
                },
                "type": "object",
                "required": [
                    "items",
                    "total",
                    "page",
                    "page_size",
                    "total_pages"
                ],
                "title": "KnowledgeBaseListResponse",
                "description": "Schema for knowledge base list response."
            },
            "KnowledgeBaseResponse": {
                "properties": {
                    "title": {
                        "type": "string",
                        "maxLength": 500,
                        "title": "Title",
                        "description": "Document title"
                    },
                    "content": {
                        "type": "string",
                        "title": "Content",
                        "description": "Document content"
                    },
                    "source": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 255
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Source",
                        "description": "Source URL or file path"
                    },
                    "metadata": {
                        "anyOf": [
                            {
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Metadata",
                        "description": "Additional metadata"
                    },
                    "tags": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Tags",
                        "description": "Document tags"
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id"
                    },
                    "organization_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Organization Id"
                    },
                    "assistant_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Assistant Id"
                    },
                    "is_active": {
                        "type": "boolean",
                        "title": "Is Active"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated At"
                    }
                },
                "type": "object",
                "required": [
                    "title",
                    "content",
                    "id",
                    "organization_id",
                    "assistant_id",
                    "is_active",
                    "created_at",
                    "updated_at"
                ],
                "title": "KnowledgeBaseResponse",
                "description": "Schema for knowledge base document response."
            },
            "KnowledgeBaseSearchRequest": {
                "properties": {
                    "query": {
                        "type": "string",
                        "title": "Query",
                        "description": "Search query"
                    },
                    "limit": {
                        "anyOf": [
                            {
                                "type": "integer",
                                "maximum": 50.0,
                                "minimum": 1.0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Limit",
                        "description": "Maximum number of results",
                        "default": 10
                    },
                    "score_threshold": {
                        "anyOf": [
                            {
                                "type": "number",
                                "maximum": 1.0,
                                "minimum": 0.0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Score Threshold",
                        "description": "Minimum similarity score",
                        "default": 0.7
                    },
                    "assistant_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Assistant Id",
                        "description": "Filter by assistant ID"
                    },
                    "tags": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Tags",
                        "description": "Filter by tags"
                    }
                },
                "type": "object",
                "required": [
                    "query"
                ],
                "title": "KnowledgeBaseSearchRequest",
                "description": "Schema for knowledge base search request."
            },
            "KnowledgeBaseSearchResponse": {
                "properties": {
                    "results": {
                        "items": {
                            "$ref": "#/components/schemas/KnowledgeBaseSearchResult"
                        },
                        "type": "array",
                        "title": "Results"
                    },
                    "total": {
                        "type": "integer",
                        "title": "Total"
                    },
                    "query": {
                        "type": "string",
                        "title": "Query"
                    },
                    "search_time_ms": {
                        "type": "number",
                        "title": "Search Time Ms"
                    }
                },
                "type": "object",
                "required": [
                    "results",
                    "total",
                    "query",
                    "search_time_ms"
                ],
                "title": "KnowledgeBaseSearchResponse",
                "description": "Schema for knowledge base search response."
            },
            "KnowledgeBaseSearchResult": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "score": {
                        "type": "number",
                        "title": "Score"
                    },
                    "content": {
                        "type": "string",
                        "title": "Content"
                    },
                    "title": {
                        "type": "string",
                        "title": "Title"
                    },
                    "source": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Source"
                    },
                    "metadata": {
                        "type": "object",
                        "title": "Metadata"
                    },
                    "created_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Created At"
                    },
                    "updated_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Updated At"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "score",
                    "content",
                    "title",
                    "source",
                    "metadata",
                    "created_at",
                    "updated_at"
                ],
                "title": "KnowledgeBaseSearchResult",
                "description": "Schema for knowledge base search result."
            },
            "KnowledgeBaseStatsResponse": {
                "properties": {
                    "total_documents": {
                        "type": "integer",
                        "title": "Total Documents"
                    },
                    "total_chunks": {
                        "type": "integer",
                        "title": "Total Chunks"
                    },
                    "organization_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Organization Id"
                    },
                    "assistant_stats": {
                        "items": {
                            "type": "object"
                        },
                        "type": "array",
                        "title": "Assistant Stats"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated At"
                    }
                },
                "type": "object",
                "required": [
                    "total_documents",
                    "total_chunks",
                    "organization_id",
                    "assistant_stats",
                    "created_at",
                    "updated_at"
                ],
                "title": "KnowledgeBaseStatsResponse",
                "description": "Schema for knowledge base statistics response."
            },
            "KnowledgeBaseUpdate": {
                "properties": {
                    "title": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 500
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Title"
                    },
                    "content": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Content"
                    },
                    "source": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 255
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Source"
                    },
                    "metadata": {
                        "anyOf": [
                            {
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Metadata"
                    },
                    "tags": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Tags"
                    },
                    "is_active": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Is Active"
                    }
                },
                "type": "object",
                "title": "KnowledgeBaseUpdate",
                "description": "Schema for updating a knowledge base document."
            },
            "KnowledgeBaseUploadRequest": {
                "properties": {
                    "title": {
                        "type": "string",
                        "maxLength": 500,
                        "title": "Title",
                        "description": "Document title"
                    },
                    "content": {
                        "type": "string",
                        "title": "Content",
                        "description": "Document content"
                    },
                    "source": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 255
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Source",
                        "description": "Source URL or file path"
                    },
                    "assistant_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Assistant Id",
                        "description": "Assistant ID (optional)"
                    },
                    "metadata": {
                        "anyOf": [
                            {
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Metadata",
                        "description": "Additional metadata"
                    },
                    "tags": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Tags",
                        "description": "Document tags"
                    },
                    "chunk_size": {
                        "anyOf": [
                            {
                                "type": "integer",
                                "maximum": 2000.0,
                                "minimum": 100.0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Chunk Size",
                        "description": "Chunk size for processing",
                        "default": 1000
                    },
                    "chunk_overlap": {
                        "anyOf": [
                            {
                                "type": "integer",
                                "maximum": 500.0,
                                "minimum": 0.0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Chunk Overlap",
                        "description": "Chunk overlap",
                        "default": 200
                    }
                },
                "type": "object",
                "required": [
                    "title",
                    "content"
                ],
                "title": "KnowledgeBaseUploadRequest",
                "description": "Schema for knowledge base upload request."
            },
            "LoginResponse": {
                "properties": {
                    "access_token": {
                        "type": "string",
                        "title": "Access Token",
                        "description": "JWT access token"
                    },
                    "token_type": {
                        "type": "string",
                        "title": "Token Type",
                        "description": "Token type",
                        "default": "bearer"
                    },
                    "expires_in": {
                        "type": "integer",
                        "title": "Expires In",
                        "description": "Token expiration time in seconds"
                    },
                    "user_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "User Id",
                        "description": "User ID"
                    },
                    "email": {
                        "type": "string",
                        "title": "Email",
                        "description": "User email"
                    },
                    "first_name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "First Name",
                        "description": "User first name"
                    },
                    "last_name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Last Name",
                        "description": "User last name"
                    },
                    "full_name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Full Name",
                        "description": "User full name"
                    },
                    "organization_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Organization Id",
                        "description": "Organization ID"
                    },
                    "organization_name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Organization Name",
                        "description": "Organization name"
                    }
                },
                "type": "object",
                "required": [
                    "access_token",
                    "expires_in",
                    "user_id",
                    "email"
                ],
                "title": "LoginResponse",
                "description": "Schema for login response with token and user info."
            },
            "Message": {
                "properties": {
                    "role": {
                        "type": "string",
                        "title": "Role",
                        "description": "Message role (e.g., 'system', 'user', 'assistant')"
                    },
                    "content": {
                        "type": "string",
                        "title": "Content",
                        "description": "Message content"
                    }
                },
                "type": "object",
                "required": [
                    "role",
                    "content"
                ],
                "title": "Message",
                "description": "Message schema for system prompts."
            },
            "ModelConfig": {
                "properties": {
                    "model": {
                        "type": "string",
                        "title": "Model",
                        "description": "Model name (e.g., 'gpt-5-mini')"
                    },
                    "messages": {
                        "items": {
                            "$ref": "#/components/schemas/Message"
                        },
                        "type": "array",
                        "title": "Messages",
                        "description": "System messages/prompts"
                    },
                    "provider": {
                        "type": "string",
                        "title": "Provider",
                        "description": "Model provider (e.g., 'openai')"
                    }
                },
                "type": "object",
                "required": [
                    "model",
                    "messages",
                    "provider"
                ],
                "title": "ModelConfig",
                "description": "Model configuration schema."
            },
            "OrganizationResponse": {
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "minLength": 1,
                        "title": "Name",
                        "description": "Organization name"
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description",
                        "description": "Organization description"
                    },
                    "settings": {
                        "anyOf": [
                            {
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Settings",
                        "description": "Organization settings"
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id"
                    },
                    "slug": {
                        "type": "string",
                        "title": "Slug"
                    },
                    "plan": {
                        "type": "string",
                        "title": "Plan"
                    },
                    "max_users": {
                        "type": "integer",
                        "title": "Max Users"
                    },
                    "max_phone_numbers": {
                        "type": "integer",
                        "title": "Max Phone Numbers"
                    },
                    "max_assistants": {
                        "type": "integer",
                        "title": "Max Assistants"
                    },
                    "is_active": {
                        "type": "boolean",
                        "title": "Is Active"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated At"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "id",
                    "slug",
                    "plan",
                    "max_users",
                    "max_phone_numbers",
                    "max_assistants",
                    "is_active",
                    "created_at",
                    "updated_at"
                ],
                "title": "OrganizationResponse",
                "description": "Schema for organization response."
            },
            "OrganizationUpdate": {
                "properties": {
                    "name": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 255,
                                "minLength": 1
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Name"
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description"
                    },
                    "settings": {
                        "anyOf": [
                            {
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Settings"
                    },
                    "plan": {
                        "anyOf": [
                            {
                                "type": "string",
                                "pattern": "^(free|pro|enterprise)$"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Plan"
                    },
                    "max_users": {
                        "anyOf": [
                            {
                                "type": "integer",
                                "minimum": 1.0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Max Users"
                    },
                    "max_phone_numbers": {
                        "anyOf": [
                            {
                                "type": "integer",
                                "minimum": 1.0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Max Phone Numbers"
                    },
                    "max_assistants": {
                        "anyOf": [
                            {
                                "type": "integer",
                                "minimum": 1.0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Max Assistants"
                    },
                    "is_active": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Is Active"
                    }
                },
                "type": "object",
                "title": "OrganizationUpdate",
                "description": "Schema for updating an organization."
            },
            "PhoneNumberCreate": {
                "properties": {
                    "phone_number": {
                        "type": "string",
                        "pattern": "^\\+[1-9]\\d{1,14}$",
                        "title": "Phone Number",
                        "description": "Phone number in E.164 format"
                    },
                    "friendly_name": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 255
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Friendly Name",
                        "description": "Friendly name for the phone number"
                    },
                    "settings": {
                        "anyOf": [
                            {
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Settings",
                        "description": "Phone number settings"
                    },
                    "twilio_account_sid": {
                        "type": "string",
                        "maxLength": 34,
                        "minLength": 34,
                        "title": "Twilio Account Sid",
                        "description": "Twilio Account SID"
                    },
                    "twilio_auth_token": {
                        "type": "string",
                        "minLength": 32,
                        "title": "Twilio Auth Token",
                        "description": "Twilio Auth Token"
                    }
                },
                "type": "object",
                "required": [
                    "phone_number",
                    "twilio_account_sid",
                    "twilio_auth_token"
                ],
                "title": "PhoneNumberCreate",
                "description": "Schema for creating a new phone number."
            },
            "PhoneNumberResponse": {
                "properties": {
                    "phone_number": {
                        "type": "string",
                        "pattern": "^\\+[1-9]\\d{1,14}$",
                        "title": "Phone Number",
                        "description": "Phone number in E.164 format"
                    },
                    "friendly_name": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 255
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Friendly Name",
                        "description": "Friendly name for the phone number"
                    },
                    "settings": {
                        "anyOf": [
                            {
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Settings",
                        "description": "Phone number settings"
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id"
                    },
                    "organization_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Organization Id"
                    },
                    "twilio_account_sid": {
                        "type": "string",
                        "title": "Twilio Account Sid"
                    },
                    "twilio_phone_number_sid": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Twilio Phone Number Sid"
                    },
                    "voice_webhook_url": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Voice Webhook Url"
                    },
                    "status_callback_url": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Status Callback Url"
                    },
                    "is_active": {
                        "type": "boolean",
                        "title": "Is Active"
                    },
                    "is_configured": {
                        "type": "boolean",
                        "title": "Is Configured"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated At"
                    }
                },
                "type": "object",
                "required": [
                    "phone_number",
                    "id",
                    "organization_id",
                    "twilio_account_sid",
                    "twilio_phone_number_sid",
                    "voice_webhook_url",
                    "status_callback_url",
                    "is_active",
                    "is_configured",
                    "created_at",
                    "updated_at"
                ],
                "title": "PhoneNumberResponse",
                "description": "Schema for phone number response."
            },
            "PhoneNumberUpdate": {
                "properties": {
                    "friendly_name": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 255
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Friendly Name"
                    },
                    "settings": {
                        "anyOf": [
                            {
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Settings"
                    },
                    "is_active": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Is Active"
                    }
                },
                "type": "object",
                "title": "PhoneNumberUpdate",
                "description": "Schema for updating a phone number."
            },
            "SupportedFormatsResponse": {
                "properties": {
                    "supported_formats": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Supported Formats"
                    },
                    "max_file_size_mb": {
                        "type": "integer",
                        "title": "Max File Size Mb"
                    },
                    "max_file_size_bytes": {
                        "type": "integer",
                        "title": "Max File Size Bytes"
                    }
                },
                "type": "object",
                "required": [
                    "supported_formats",
                    "max_file_size_mb",
                    "max_file_size_bytes"
                ],
                "title": "SupportedFormatsResponse",
                "description": "Schema for supported formats response."
            },
            "Token": {
                "properties": {
                    "access_token": {
                        "type": "string",
                        "title": "Access Token",
                        "description": "JWT access token"
                    },
                    "token_type": {
                        "type": "string",
                        "title": "Token Type",
                        "description": "Token type",
                        "default": "bearer"
                    },
                    "expires_in": {
                        "type": "integer",
                        "title": "Expires In",
                        "description": "Token expiration time in seconds"
                    }
                },
                "type": "object",
                "required": [
                    "access_token",
                    "expires_in"
                ],
                "title": "Token",
                "description": "Schema for authentication token response."
            },
            "TranscriberConfig": {
                "properties": {
                    "model": {
                        "type": "string",
                        "title": "Model",
                        "description": "Transcription model name"
                    },
                    "language": {
                        "type": "string",
                        "title": "Language",
                        "description": "Language code"
                    },
                    "provider": {
                        "type": "string",
                        "title": "Provider",
                        "description": "Transcription provider"
                    }
                },
                "type": "object",
                "required": [
                    "model",
                    "language",
                    "provider"
                ],
                "title": "TranscriberConfig",
                "description": "Transcriber configuration schema."
            },
            "UserLogin": {
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email",
                        "title": "Email",
                        "description": "User email address"
                    },
                    "password": {
                        "type": "string",
                        "minLength": 6,
                        "title": "Password",
                        "description": "User password"
                    }
                },
                "type": "object",
                "required": [
                    "email",
                    "password"
                ],
                "title": "UserLogin",
                "description": "Schema for user login."
            },
            "UserProfile": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id"
                    },
                    "email": {
                        "type": "string",
                        "title": "Email"
                    },
                    "first_name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "First Name"
                    },
                    "last_name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Last Name"
                    },
                    "is_active": {
                        "type": "boolean",
                        "title": "Is Active"
                    },
                    "is_verified": {
                        "type": "boolean",
                        "title": "Is Verified"
                    },
                    "last_login_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Last Login At"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "email",
                    "first_name",
                    "last_name",
                    "is_active",
                    "is_verified",
                    "last_login_at",
                    "created_at"
                ],
                "title": "UserProfile",
                "description": "Schema for user profile response."
            },
            "UserRegister": {
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email",
                        "title": "Email",
                        "description": "User email address"
                    },
                    "password": {
                        "type": "string",
                        "minLength": 6,
                        "title": "Password",
                        "description": "User password"
                    },
                    "first_name": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 100
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "First Name",
                        "description": "User first name"
                    },
                    "last_name": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 100
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Last Name",
                        "description": "User last name"
                    },
                    "organization_name": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 255
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Organization Name",
                        "description": "Organization name (for new org)"
                    }
                },
                "type": "object",
                "required": [
                    "email",
                    "password"
                ],
                "title": "UserRegister",
                "description": "Schema for user registration."
            },
            "ValidationError": {
                "properties": {
                    "loc": {
                        "items": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        },
                        "type": "array",
                        "title": "Location"
                    },
                    "msg": {
                        "type": "string",
                        "title": "Message"
                    },
                    "type": {
                        "type": "string",
                        "title": "Error Type"
                    }
                },
                "type": "object",
                "required": [
                    "loc",
                    "msg",
                    "type"
                ],
                "title": "ValidationError"
            },
            "VoiceConfig": {
                "properties": {
                    "model": {
                        "type": "string",
                        "title": "Model",
                        "description": "Voice model to use"
                    },
                    "voiceId": {
                        "type": "string",
                        "title": "Voiceid",
                        "description": "Voice ID"
                    },
                    "provider": {
                        "type": "string",
                        "title": "Provider",
                        "description": "Voice provider (e.g., '11labs')"
                    },
                    "stability": {
                        "type": "number",
                        "title": "Stability",
                        "description": "Voice stability (0.0-1.0)",
                        "default": 0.5
                    },
                    "similarityBoost": {
                        "type": "number",
                        "title": "Similarityboost",
                        "description": "Voice similarity boost (0.0-1.0)",
                        "default": 0.75
                    }
                },
                "type": "object",
                "required": [
                    "model",
                    "voiceId",
                    "provider"
                ],
                "title": "VoiceConfig",
                "description": "Voice configuration schema."
            }
        },
        "securitySchemes": {
            "HTTPBearer": {
                "type": "http",
                "scheme": "bearer"
            }
        }
    }
}